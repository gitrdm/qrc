name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g., v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Determine version
        id: ver
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build all targets (get, vendor, build, test, cross)
        run: |
          make get
          make vendor
          make build VERSION=${{ steps.ver.outputs.version }}
          make test
          make cross VERSION=${{ steps.ver.outputs.version }}

      - name: Generate checksums
        run: |
          mkdir -p dist
          ls -l dist || true
          cd dist
          sha256sum * > SHASUMS256.txt

      - name: Validate version input (manual dispatch only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          case "${{ github.event.inputs.version }}" in
            v*) ;;
            *) echo "version must start with 'v' (e.g., v1.2.3)" >&2; exit 1;;
          esac

      - name: Create GitHub Release and upload assets
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || '' }}
          prerelease: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease || false }}
          generate_release_notes: true
          name: qrc ${{ steps.ver.outputs.version }}
          files: |
            dist/qrc-*
            dist/SHASUMS256.txt
